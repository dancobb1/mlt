version: 2
jobs:
  build:
    machine:
      docker_layer_caching: true
    environment:
      KUBECONFIG: /home/circleci/.kube/config
    working_directory: ~/repo
    # gets around pyenv with circleci: https://discuss.circleci.com/t/testing-in-different-environments/450/12
    dependencies:
      override:
        - sudo pip install tox tox-pyenv
        - pyenv local 2.7.12 3.5.2
    steps:
      - checkout

      - run:
          name: Installing test/lint dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -yq --no-install-recommends --fix-missing \
                curl \
                git \
                make \
                python \
                python-dev \
                python-pip \
                python-setuptools \
                python3 \
                python3-dev \
                python3-pip \
                python3-setuptools \
                python3-wheel \
                tar

      # - run:
      #     name: lint tests
      #     command: |
      #       make lint
      
      # - run:
      #     name: Run unit tests
      #     command: |
      #       make test

      - run:
          name: Installing docker dependencies
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv /tmp/docker/* /usr/bin
            curl -L https://github.com/docker/compose/releases/download/1.16.0/docker-compose-`uname -s`-`uname -m` | sudo tee -a /usr/local/bin/docker-compose > /dev/null
            sudo chmod +x /usr/local/bin/docker-compose
            
      - run:
          name: Run e2e tests
          command: |
            # docker will fail with `shim error: json: cannot unmarshal object into Go value of type []string` without this
            sudo service docker restart
            # in order for other things to see mounts created by kubelet, need it to be shared
            # sudo mkdir -p /var/lib/kubelet
            # sudo mount -o bind /var/lib/kubelet /var/lib/kubelet
            # sudo mount --make-shared /var/lib/kubelet

            # make test-e2e

            # sudo apt-get update && sudo apt-get install -y apt-transport-https
            # # install init_system_helpers 1.18 to satisfy kubernetes-xenial on ubuntu 14.04
            # curl http://launchpadlibrarian.net/173841617/init-system-helpers_1.18_all.deb > /tmp/init_system_helpers.deb && sudo dpkg -i /tmp/init_system_helpers.deb
            # curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            # echo 'deb http://apt.kubernetes.io/ kubernetes-xenial main' | sudo tee -a /etc/apt/sources.list.d/kubernetes.list > /dev/null
            # sudo apt-get update
            # sudo apt-get install -y kubelet kubeadm

            # kubeadm init --pod-network-cidr=192.168.0.0/16
            # kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml

            # create a cluster in our project
            gcloud beta container --project "constant-cubist-173123" clusters create "dls-isolation" --zone "us-west1-a" --username "admin" --cluster-version "1.9.6-gke.1" --machine-type "n1-standard-8" --image-type "UBUNTU" --disk-size "100" --scopes "https://www.googleapis.com/auth/cloud-platform" --enable-kubernetes-alpha --num-nodes "3" --network "default" --enable-cloud-logging --enable-cloud-monitoring --subnetwork "default" --addons HorizontalPodAutoscaling,HttpLoadBalancing,KubernetesDashboard --labels owner=kamkasravi

            make test-e2e


