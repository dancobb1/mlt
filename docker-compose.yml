version: "2"

services:
  etcd:
    image: "quay.io/coreos/etcd:v3.2"
    command: "etcd --advertise-client-urls http://0.0.0.0:2379 --listen-client-urls http://0.0.0.0:2379"
    ports:
      - 2379:2379

  kubernetes:
    image: "gcr.io/google-containers/hyperkube-amd64:v1.8.5"
    depends_on:
      - "etcd"
    privileged: true
    command: "/hyperkube apiserver --insecure-bind-address=0.0.0.0 --etcd-servers=http://etcd:2379 --service-cluster-ip-range=10.0.0.0/16 --storage-backend=etcd2
--storage-media-type=application/json --admission-control=NamespaceLifecycle,NamespaceExists,ServiceAccount,LimitRanger,ResourceQuota"
    ports:
      - 8080:8080
    volumes:
      - /var/run/kubernetes:/var/run/kubernetes:rw

  kubelet:
    image: gcr.io/google_containers/hyperkube-amd64:v1.8.5
    ports:
      - 8080
    privileged: true
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ./resources:/resources:rw
      - /var/lib/docker:/var/lib/docker:rw
      - /var/lib/kubelet:/var/lib/kubelet:rw,shared
    command: "/hyperkube kubelet --hostname-override=127.0.0.1 --enable-server --kubeconfig=/resources/config.yaml --v=2 --fail-swap-on=false --cluster-dns=10.0.0.1 --cluster-domain=cluster.local --runtime-cgroups=/systemd/system.slice --kubelet-cgroups=/systemd/system.slice"

  proxy:
    image: gcr.io/google_containers/hyperkube-amd64:v1.8.5
    pid: host
    privileged: true
    command: "/hyperkube proxy --master=http://kubernetes:8080 --v=2 --conntrack-max=0 --conntrack-max-per-core=0"

  controller-manager:
    image: gcr.io/google_containers/hyperkube-amd64:v1.8.5
    pid: host
    volumes:
      - /var/run/kubernetes:/var/run/kubernetes:rw
    command: "/hyperkube controller-manager --master=http://kubernetes:8080 --v=2 --service-account-private-key-file=/var/run/kubernetes/apiserver.key --root-ca-file=/var/run/kubernetes/apiserver.crt"

  scheduler:
    image: gcr.io/google_containers/hyperkube-amd64:v1.8.5
    pid: host
    command: "/hyperkube scheduler --master=http://kubernetes:8080 --v=2"

  registry:
    image: "registry:2"
    ports:
      - 5000:5000

  test:
    image: "mlt"
    depends_on:
      - "kubernetes"
      - "registry"
    environment:
      - KUBECONFIG=/usr/share/mlt/resources/config.yaml
    command: "sleep inf"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
